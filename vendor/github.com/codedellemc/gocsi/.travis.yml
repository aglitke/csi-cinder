# Setting "sudo" to false forces Travis-CI to use its
# container-based build infrastructure, which has shorter
# queue times.
sudo: false

# Use the newer Travis-CI build templates based on the
# Debian Linux distribution "Trusty" release.
dist: trusty

# Select Go as the language used to run the buid.
language: go
go: 1.8.3
go_import_path: github.com/codedellemc/gocsi

env:
  global:
    # Setting SKIP_CODEGEN=true means, unless overriden, all jobs will
    # not be required to check if the protobuf or language binding files
    # need to be rebuilt.
    - SKIP_CODEGEN=true

jobs:
  include:

      # Validate the protobuf and Go language binding files have been
      # updated prior to being committed.
      - stage:          validate
        env:            SKIP_CODEGEN=false
        install:
          # Install the protobuf compiler binary.
          - make protoc
          # Install the plug-in used by protoc to generate the Go
          # language bindings.
          - make protoc-gen-go
        script:
          # Verify the protobuf file is up-to-date.
          - make csi/csi.proto
          # Verify the Go language binding file is up-to-date.
          - make csi/csi.pb.go
        after_success:
          # Print a warning if the vendorered CSI spec does not
          # produce the same protobuf as the master CSI spec.
          - make csi-spec-comp-master

      # Verify GoCSI builds without errors
      - stage:   build
        env:     PROG=gocsi.a
        install: skip
        script:  make $PROG

      - stage:   build
        env:     PROG=mount.a
        install: skip
        script:  make $PROG

      - stage:   build
        env:     PROG=csc
        install: skip
        script:  make -C $PROG

      - stage:   build
        env:     PROG=mock
        install: skip
        script:  make -C $PROG

      # Test GoCSI using the Mock CSI plug-in.
      - stage:   test
        install:
          - make ginkgo
          - make -C mock
        script:
          - GOCSI_MOCK=$(pwd)/mock/mock make test

      # Test the mount package. This job requires a VM (sudo: required)
      # because of the tests performing mount operations.
      - stage:   test
        sudo:    required
        install: skip
        script:
          - go test -c -o mount.test ./mount
          - mkdir -p /tmp/gocsi && cp mount.test /tmp/gocsi
          - sudo /tmp/gocsi/mount.test -test.v
